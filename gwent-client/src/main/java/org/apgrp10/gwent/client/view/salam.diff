diff --git a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameMenu.java b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameMenu.java
index d12a370..8973b03 100644
--- a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameMenu.java
+++ b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameMenu.java
@@ -198,9 +198,29 @@ public class GameMenu implements GameMenuInterface {
 		stage.setHeight(HEIGHT);
 		stage.centerOnScreen();
 		addTerminalListener();
+		addStaticNodes();
 		redraw();
 	}
 
+	private void addStaticNodes() {
+		addButton(realRoot, "Pass", "pass", Position.pass);
+		addButton(realRoot, "React", "react_0", new Position.RectPos(0.1625, 0.0958, 0.2244, 0.1900));
+		if (hasChat) {
+			MFXButton b = new MFXButton("C\nh\na\nt");
+			b.setStyle("-fx-font-family: 'Comfortaa SemiBold'; -fx-background-color: rgba(245,222,196,0.54)");
+			b.setOnAction(k -> {
+				if (!MessageStage.getInstance().isShowing())
+					MessageStage.getInstance().start();
+				else {
+					MessageStage.getInstance().close();
+					Stage primaryStage = GameStage.getInstance();
+					primaryStage.setX(primaryStage.getX() + 125);
+				}
+			});
+			realRoot.getChildren().add(b);
+		}
+	}
+
 	public void endGame() {
 		removeTerminalListener();
 	}
@@ -227,7 +247,7 @@ public class GameMenu implements GameMenuInterface {
 	private void addText(String str, Position.RectPos pos) {
 		// TODO: better way to adjust text position and size
 		Text text = new Text(str);
-		text.setFont(Font.font(24));
+		text.setStyle("-fx-font-family: 'Comfortaa SemiBold'; -fx-font-size: 25;");
 		text.setLayoutX(pos.x() + pos.w() * (0.5 - 0.2 * str.length()));
 		text.setLayoutY(pos.y() + pos.h() * 0.75);
 		rootPane.getChildren().add(text);
@@ -238,7 +258,9 @@ public class GameMenu implements GameMenuInterface {
 		btn.setOnMouseClicked(e -> notifyListeners(buttonListeners, cmd));
 		if (pos != null)
 			pos.setBounds(btn);
-		btn.setStyle("-fx-font-family: 'Comfortaa SemiBold'; -fx-background-color: rgba(245,222,196,0.54)");
+		btn.setStyle("-fx-font-family: 'Comfortaa SemiBold';" +
+		             "-fx-background-color: rgba(245,222,196,0.54);" +
+		             "-fx-text-fill: #000000;");
 		parent.getChildren().add(btn);
 	}
 
@@ -512,8 +534,6 @@ public class GameMenu implements GameMenuInterface {
 		addBackground(R.image.board[controller.getActivePlayer()]);
 		if (showCheats)
 			addCheatButtons();
-		addButton(rootPane, "Pass", "pass", Position.pass);
-		addButton(rootPane, "React", "react_0", new Position.RectPos(0.1625, 0.0958, 0.2244, 0.1900));
 
 		addDeckCards(true);
 		addProfile(true);
@@ -619,23 +639,8 @@ public class GameMenu implements GameMenuInterface {
 			overlayPane.getChildren().add(btn);
 		}
 
-		if (hasChat) {
-			MFXButton b = new MFXButton("C\nh\na\nt");
-			b.setStyle("-fx-font-family: 'Comfortaa SemiBold'; -fx-background-color: rgba(245,222,196,0.54)");
-			b.setOnAction(k -> {
-				if (!MessageStage.getInstance().isShowing())
-					MessageStage.getInstance().start();
-				else {
-					MessageStage.getInstance().close();
-					Stage primaryStage = GameStage.getInstance();
-					primaryStage.setX(primaryStage.getX() + 125);
-				}
-			});
-			overlayPane.getChildren().add(b);
-		}
 		if (pickList != null)
 			addPicker();
-
 	}
 
 	protected List<Card> pickList;
diff --git a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameStage.java b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameStage.java
index 9bf48e3..d9f98a7 100644
--- a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameStage.java
+++ b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/GameStage.java
@@ -22,8 +22,13 @@ import org.apgrp10.gwent.utils.Utils;
 import javafx.stage.WindowEvent;
 
 public class GameStage extends AbstractStage {
+	private static final List<Command> cmds = new ArrayList<>();
 	private static GameStage INSTANCE;
-
+	private static GameMode mode = GameMode.NONE;
+	private static User.PublicInfo user1, user2;
+	private static Deck deck1, deck2;
+	private static long seed;
+	private static int player;
 	private GameStage() {
 		super("Gwent Game", R.icon.app_icon);
 		if (INSTANCE != null) throw new RuntimeException("Duplicate Instance of GameStage");
@@ -34,14 +39,6 @@ public class GameStage extends AbstractStage {
 		return INSTANCE;
 	}
 
-	private enum GameMode { NONE, LOCAL, ONLINE, CONTINUE, LIVE, REPLAY }
-	private static GameMode mode = GameMode.NONE;
-	private static User.PublicInfo user1, user2;
-	private static Deck deck1, deck2;
-	private static long seed;
-	private static int player;
-	private static final List<Command> cmds = new ArrayList<>();
-
 	public static void setCommonData(User.PublicInfo u1, User.PublicInfo u2, Deck d1, Deck d2, long seed) {
 		user1 = u1;
 		user2 = u2;
@@ -112,18 +109,22 @@ public class GameStage extends AbstractStage {
 	}
 
 	private void createOnline() {
-		InputController c1 = player == 0? new MouseInputController(): new ServerInputController();
-		InputController c2 = player == 1? new MouseInputController(): new ServerInputController();
+		InputController c1 = player == 0 ? new MouseInputController() : new ServerInputController();
+		InputController c2 = player == 1 ? new MouseInputController() : new ServerInputController();
 		GameMenu gm = new GameMenu(this, true);
-		GameController gc = new GameController(c1, c2, user1, user2, deck1, deck2, seed, gm, gr -> this.close(), player, false);
+		GameController gc = new GameController(c1, c2, user1, user2, deck1, deck2, seed, gm, gr -> {
+
+		}, player, false);
 		setupServer(gc);
 	}
 
 	private void createContinue() {
-		InputController c1 = player == 0? new MouseInputController(): new ServerInputController();
-		InputController c2 = player == 1? new MouseInputController(): new ServerInputController();
+		InputController c1 = player == 0 ? new MouseInputController() : new ServerInputController();
+		InputController c2 = player == 1 ? new MouseInputController() : new ServerInputController();
 		GameMenu gm = new GameMenu(this, true);
-		GameController gc = new GameController(c1, c2, user1, user2, deck1, deck2, seed, gm, gr -> this.close(), player, false);
+		GameController gc = new GameController(c1, c2, user1, user2, deck1, deck2, seed, gm, gr -> {
+
+		}, player, false);
 		gc.fastForward(cmds);
 		setupServer(gc);
 	}
@@ -163,6 +164,8 @@ public class GameStage extends AbstractStage {
 	@Override
 	protected void onCloseRequest(WindowEvent event) {
 		event.consume();
-		if(showExitDialog()) stopServer();
+		if (showExitDialog()) stopServer();
 	}
+
+	private enum GameMode {NONE, LOCAL, ONLINE, CONTINUE, LIVE, REPLAY}
 }
diff --git a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/PreGameMenu.java b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/PreGameMenu.java
index 39aa5b4..e68dddd 100644
--- a/gwent-client/src/main/java/org/apgrp10/gwent/client/view/PreGameMenu.java
+++ b/gwent-client/src/main/java/org/apgrp10/gwent/client/view/PreGameMenu.java
@@ -1,7 +1,6 @@
 package org.apgrp10.gwent.client.view;
 
 import io.github.palexdev.materialfx.controls.MFXButton;
-import io.github.palexdev.materialfx.dialogs.MFXDialogs;
 import javafx.event.EventHandler;
 import javafx.geometry.Pos;
 import javafx.scene.ImageCursor;
@@ -52,7 +51,7 @@ public class PreGameMenu {
 		load();
 		addInfoBox();
 		addUserInfo();
-		addGradePane();
+		addGridePane();
 		setSpoiler();
 		uploadDeck(R.getAbsPath("primaryDeck.gwent"));
 		addLinkTexts();
@@ -186,10 +185,10 @@ public class PreGameMenu {
 		rec.setFill(Color.BLACK);
 		pane.getChildren().add(rec);
 		rec.setOpacity(0.7);
-		setCursor();
+//		setCursor();
 	}
 
-	private void addGradePane() {
+	private void addGridePane() {
 		for (int i = 0; i < 2; i++) {
 			GridPane gridPane = new GridPane();
 			gridPane.setVgap(3);
@@ -362,7 +361,7 @@ public class PreGameMenu {
 		textForInfo(infoVBox, "Hero cards:");
 		totalHeroText = textWithImageInfo(infoVBox, "deck_stats_hero");
 		StackPane buttonBorder = getStackPane(150, 35, Pos.CENTER);
-		MFXButton btn = new MFXButton("startGame");
+		MFXButton btn = new MFXButton("Start Game");
 		btn.setOnMouseClicked(k -> startGame());
 		btn.setStyle("-fx-font-family: 'Comfortaa SemiBold'; -fx-font-size: 18px; -fx-background-color: gray;");
 		buttonBorder.getChildren().add(btn);
diff --git a/gwent-server/src/main/java/org/apgrp10/gwent/server/GameTask.java b/gwent-server/src/main/java/org/apgrp10/gwent/server/GameTask.java
index 478ee5f..b1bf168 100644
--- a/gwent-server/src/main/java/org/apgrp10/gwent/server/GameTask.java
+++ b/gwent-server/src/main/java/org/apgrp10/gwent/server/GameTask.java
@@ -1,6 +1,7 @@
 package org.apgrp10.gwent.server;
 
 import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.List;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
@@ -192,9 +193,6 @@ public class GameTask extends Task {
 		}
 
 		// Remove all disconnected live-watcher clients
-		for (int i = 0; i < liveClients.size(); i++) {
-			if (liveClients.get(i).isDone())
-				liveClients.remove(i--);
-		}
+		liveClients.removeIf(Client::isDone);
 	}
 }
